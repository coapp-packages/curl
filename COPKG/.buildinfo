@import "version.inc";

#define {
    NewVersion : "${package-version++}";
    ReleaseCmd : {
        (COMP,PLAT) => @"
            if ""${BUILT}"" neq ""true"" ptk --nologo base --PLAT=${1} --COMP=${0} || goto failed
            REM "
    };
}

#product-info  {
    product-name: "curl";
    version: "${NewVersion}";
    original-source-location: "http://curl.haxx.se/download/curl-7.21.7.tar.gz";
    original-source-website: "http://curl.haxx.se/";
    license: "Custom - see COPYING for detils";
    packager: "Hamish C";
}

test {
	set: {
        COMP="${COMP??vc10}";
		PLAT="${PLAT??x86, x64}";
		BUILT="${BUILT??false}";
	};
    uses: release;
};

package {
    set: COMP="${COMP??vc10}";
    set: PLAT="${PLAT??x86, x64}";
    default : false;
    uses : {
        update-version,
        release,
    };
    
    targets: { 
        (COMP,PLAT) => @"copkg\libcurl-dev[${0}]-${NewVersion}-${1}.msi",
    };
    
    build-command : @"
        pushd COPKG
        autopackage libcurl-dev-common.autopkg || goto failed
        
        for %%a in (${COMP}) do (
            for %%b in (${PLAT}) do (
                autopackage --flav=%%a --arc=%%b libcurl.autopkg curl.autopkg libcurl-dev.autopkg || goto failed
            )
        )
        popd
    ";

	clean-command: @"del COPKG\*.msi COPKG\*.wixpdb";
	
};


update-version {
    default : false;
    
    build-command : @"
        REM auto-increment version.inc file...
        if ""${noversion}"" == ""true"" goto :endver
        pushd COPKG
        setlocal EnableDelayedExpansion
        set VERSTRING=#define { package-version: ${NewVersion}; }
        echo !VERSTRING! > version.inc
        popd
        :endver
    ";
}

release {
    set: {
		DEBUG="no";
        COMP="${COMP??vc10}";
		PLAT="${PLAT??x86, x64}";
	};
    build-command: @"${ReleaseCmd??goto failed}";    
};

x86 {
    set: PLAT=x86;
    uses: base;
};

x64 {
    set: PLAT=x64;
    uses: base;
};

base{
    set: {
        PLAT="${PLAT??x86}";
        COMP="${COMP??vc10}";
        DEBUG="${DEBUG??yes}";
    };
    compiler: "${COMP}";
    platform: "${PLAT}";

    requires: "zlib-dev[${COMP}]-1.2.5-${PLAT}-1e373a58e25250cb";
    requires: "openssl-dev[${COMP}]-1.0-${PLAT}-1e373a58e25250cb";
    requires: "libssh2-dev[${COMP}]-1.3-${PLAT}-1e373a58e25250cb";

    targets: { 
        "builds\libcurl-${COMP}-${PLAT}-release-dll-ssl-dll-zlib-dll-ssh2-dll-ipv6-sspi\bin\curl.exe",
        "builds\libcurl-${COMP}-${PLAT}-release-dll-ssl-dll-zlib-dll-ssh2-dll-ipv6-sspi\bin\libcurl.dll",
        "builds\libcurl-${COMP}-${PLAT}-release-dll-ssl-dll-zlib-dll-ssh2-dll-ipv6-sspi\lib\libcurl.exp",
        "builds\libcurl-${COMP}-${PLAT}-release-dll-ssl-dll-zlib-dll-ssh2-dll-ipv6-sspi\lib\libcurl.lib"
    };
     
    build-command:@"
        REM this makes it so that DLLs can have their own SxS Activation Context in an embedded resource.
        echo %CL% | findstr ISOLATION_AWARE || set CL=%CL% -D ISOLATION_AWARE_ENABLED

        pushd include\curl
            copy /y curlbuild.h.dist curlbuild.h
        popd
        pushd src
            copy /y hugehelp.c.cvs hugehelp.c
        popd
        pushd winbuild
            nmake -f makefile.vc mode=dll WITH_SSL=dll WITH_ZLIB=dll WITH_SSH2=dll MACHINE=${PLAT} VC=%COMP:~2%
        popd
    ";
     
    clean-command:@"
        IF EXIST builds\libcurl-${COMP}-${PLAT}-release-dll-ssl-dll-zlib-dll-ssh2-dll-ipv6-sspi rmdir /Q /S builds\libcurl-X86-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi > NUL 2>&1
        IF EXIST builds\libcurl-${COMP}-${PLAT}-release-dll-ssl-dll-zlib-dll-ssh2-dll-ipv6-sspi-obj-curl rmdir /Q /S builds\libcurl-X86-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi-obj-curl >NUL 2>&1
        IF EXIST builds\libcurl-${COMP}-${PLAT}-release-dll-ssl-dll-zlib-dll-ssh2-dll-ipv6-sspi-obj-lib rmdir /Q /S builds\libcurl-X86-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi-obj-lib >NUL 2>&1
        del /Q /S src\hugehelp.c include\curl\curlbuild.h winbuild\LIBCURL_OBJS.inc winbuild\CURL_OBJS.inc winbuild\vc100.idb >NUL 2>&1
    ";
};

x86{
    compiler: vc10;
    platform: x86;
     
    uses: x86=@"..\zlib";
    uses: x86=@"..\openssl";
    uses: x86=@"..\libssh2";

    targets: { 
        "builds\libcurl-X86-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi\bin\curl.exe",
        "builds\libcurl-X86-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi\bin\libcurl.dll",
        "builds\libcurl-X86-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi\lib\libcurl.exp",
        "builds\libcurl-X86-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi\lib\libcurl.lib"
    };
     
    build-command:@"
       rem best you have your visual studio installed in the default location...
       IF EXIST ""C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat"" call ""C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat"" x86
       IF EXIST ""C:\Program Files\Microsoft Visual Studio 10.0\VC\vcvarsall.bat"" call ""C:\Program Files\Microsoft Visual Studio 10.0\VC\vcvarsall.bat"" x86
       pushd include\curl
           copy curlbuild.h.dist curlbuild.h
       popd
       pushd src
           copy hugehelp.c.cvs hugehelp.c
       popd
       pushd winbuild
           nmake -f makefile.vc mode=dll WITH_SSL=dll WITH_ZLIB=dll WITH_SSH2=dll MACHINE=X86
       popd
    ";
     
    clean-command:@"
        IF EXIST builds\libcurl-X86-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi rmdir /Q /S builds\libcurl-X86-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi > NUL 2> NUL
        IF EXIST builds\libcurl-X86-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi-obj-curl rmdir /Q /S builds\libcurl-X86-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi-obj-curl > NUL 2> NUL
        IF EXIST builds\libcurl-X86-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi-obj-lib rmdir /Q /S builds\libcurl-X86-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi-obj-lib > NUL 2> NUL
        del /Q /S src\hugehelp.c include\curl\curlbuild.h winbuild\LIBCURL_OBJS.inc winbuild\CURL_OBJS.inc winbuild\vc100.idb >NUL 2>NUL
    ";
};

x64 {
    compiler: vc10;
    compmiler: x64;

    uses: x64=@"..\zlib";
    uses: x64=@"..\openssl";
    uses: x64=@"..\libssh2";
     
    targets: { 
        "builds\libcurl-X64-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi\bin\curl.exe",
        "builds\libcurl-X64-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi\bin\libcurl.dll",
        "builds\libcurl-X64-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi\lib\libcurl.exp",
        "builds\libcurl-X64-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi\lib\libcurl.lib"     
    };
     
    build-command:@"
       rem best you have your visual studio installed in the default location...
       IF EXIST ""C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat"" call ""C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat"" amd64
       IF EXIST ""C:\Program Files\Microsoft Visual Studio 10.0\VC\vcvarsall.bat"" call ""C:\Program Files\Microsoft Visual Studio 10.0\VC\vcvarsall.bat"" x86_amd64
       pushd include\curl
           copy curlbuild.h.dist curlbuild.h
       popd
       pushd src
           copy hugehelp.c.cvs hugehelp.c
       popd
       pushd winbuild
           nmake -f makefile.vc mode=dll WITH_SSL=dll WITH_ZLIB=dll WITH_SSH2=dll MACHINE=X64
       popd
    ";
     
    clean-command:@"
        IF EXIST builds\libcurl-X64-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi rmdir /Q /S builds\libcurl-X64-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi > NUL 2> NUL
        IF EXIST builds\libcurl-X64-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi-obj-curl rmdir /Q /S builds\libcurl-X64-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi-obj-curl > NUL 2> NUL
        IF EXIST builds\libcurl-X64-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi-obj-lib rmdir /Q /S builds\libcurl-X64-release-dll-ssl-dll-zlib--ssh2-dll-ipv6-sspi-obj-lib > NUL 2> NUL
        del /Q /S src\hugehelp.c include\curl\curlbuild.h winbuild\LIBCURL_OBJS.inc winbuild\CURL_OBJS.inc winbuild\vc100.idb >NUL 2>NUL
    ";
};
